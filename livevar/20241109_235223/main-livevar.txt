================== main liveVar ================
label0:
	%op1 = alloca i32  [op1]
	store i32 2, i32* %op1  [op1]
	%op2 = alloca i32  [op2, op1]
	store i32 5, i32* %op2  [op2, op1]
	%op3 = alloca i32  [op2, op1]
	%op4 = alloca i32  [op2, op1]
	%op5 = call i32 @getint()  [op2, op1, op5]
	store i32 %op5, i32* %op1  [op2, op1]
	%op6 = call i32 @getint()  [op2, op1, op6]
	store i32 %op6, i32* %op2  [op2, op1]
	%op7 = load i32, i32* %op1  [op2, op7, op1]
	%op8 = load i32, i32* %op2  [op2, op7, op1, op8]
	%op9 = mul i32 %op7, %op8  [op2, op9, op1]
	%op10 = sub i32 0, %op9  [op2, op10, op1]
	%op11 = call i32 @fib(i32 4)  [op2, op10, op11, op1]
	%op12 = mul i32 %op10, %op11  [op2, op12, op1]
	%op13 = add i32 %op12, 0  [op13, op2, op1]
	%op14 = getelementptr [10 x i32], [10 x i32]* @a, i32 0, i32 1  [op13, op2, op1, op14]
	%op15 = load i32, i32* %op14  [op13, op2, op15, op1]
	%op16 = mul i32 %op15, 1  [op13, op16, op2, op1]
	%op17 = add i32 %op13, %op16  [op2, op17, op1]
	%op18 = sub i32 %op17, 0  [op2, op1, op18]
	%op19 = sdiv i32 %op18, 5  [op19, op2, op1]
	store i32 %op19, i32* %op1  [op2, op1]
	%op20 = call i32 @fib(i32 5)  [op2, op1, op20]
	%op21 = add i32 %op20, 2  [op2, op21, op1]
	%op22 = call i32 @fib(i32 %op21)  [op2, op1, op22]
	%op23 = sub i32 1197, %op22  [op23, op2, op1]
	%op24 = add i32 %op23, -10091  [op2, op1, op24]
	store i32 %op24, i32* %op2  [op2, op1]
	%op25 = alloca i32  [op2, op25, op1]
	store i32 -6, i32* %op25  [op2, op1, op25]
	%op26 = getelementptr [10 x i32], [10 x i32]* @a, i32 0, i32 0  [op2, op1, op25, op26]
	%op27 = getelementptr [10 x i32], [10 x i32]* @a, i32 0, i32 0  [op27, op2, op1, op25, op26]
	%op28 = load i32, i32* %op27  [op2, op28, op1, op25, op26]
	%op29 = load i32, i32* %op1  [op2, op28, op1, op25, op29, op26]
	%op30 = load i32, i32* %op1  [op2, op30, op28, op1, op25, op29, op26]
	%op31 = mul i32 %op29, %op30  [op2, op31, op28, op1, op25, op26]
	%op32 = add i32 %op28, %op31  [op2, op1, op25, op32, op26]
	store i32 %op32, i32* %op26  [op2, op1, op25]
	%op33 = getelementptr [10 x i32], [10 x i32]* @a, i32 0, i32 1  [op2, op1, op25, op33]
	%op34 = getelementptr [10 x i32], [10 x i32]* @a, i32 0, i32 1  [op2, op1, op34, op25, op33]
	%op35 = load i32, i32* %op34  [op2, op1, op25, op33, op35]
	%op36 = load i32, i32* %op1  [op36, op2, op1, op25, op33, op35]
	%op37 = load i32, i32* %op1  [op37, op36, op2, op1, op25, op33, op35]
	%op38 = mul i32 %op36, %op37  [op2, op38, op1, op25, op33, op35]
	%op39 = add i32 %op35, %op38  [op2, op1, op25, op33, op39]
	store i32 %op39, i32* %op33  [op2, op1, op25]
	%op40 = getelementptr [10 x i32], [10 x i32]* @a, i32 0, i32 2  [op2, op40, op1, op25]
	%op41 = getelementptr [10 x i32], [10 x i32]* @a, i32 0, i32 2  [op2, op40, op41, op1, op25]
	%op42 = load i32, i32* %op41  [op2, op40, op1, op25, op42]
	%op43 = load i32, i32* %op1  [op2, op40, op1, op25, op42, op43]
	%op44 = load i32, i32* %op1  [op44, op2, op40, op1, op25, op42, op43]
	%op45 = mul i32 %op43, %op44  [op2, op40, op45, op1, op25, op42]
	%op46 = add i32 %op42, %op45  [op2, op40, op1, op25, op46]
	store i32 %op46, i32* %op40  [op2, op1, op25]
	%op47 = getelementptr [10 x i32], [10 x i32]* @a, i32 0, i32 3  [op2, op47, op1, op25]
	%op48 = getelementptr [10 x i32], [10 x i32]* @a, i32 0, i32 3  [op2, op48, op47, op1, op25]
	%op49 = load i32, i32* %op48  [op2, op47, op1, op25, op49]
	%op50 = load i32, i32* %op1  [op50, op2, op47, op1, op25, op49]
	%op51 = load i32, i32* %op1  [op50, op2, op47, op1, op25, op51, op49]
	%op52 = mul i32 %op50, %op51  [op2, op47, op52, op1, op25, op49]
	%op53 = add i32 %op49, %op52  [op2, op47, op1, op25, op53]
	store i32 %op53, i32* %op47  [op2, op1, op25]
	%op54 = getelementptr [10 x i32], [10 x i32]* @a, i32 0, i32 4  [op54, op2, op1, op25]
	%op55 = getelementptr [10 x i32], [10 x i32]* @a, i32 0, i32 4  [op54, op2, op1, op25, op55]
	%op56 = load i32, i32* %op55  [op54, op2, op56, op1, op25]
	%op57 = load i32, i32* %op1  [op57, op54, op2, op56, op1, op25]
	%op58 = load i32, i32* %op1  [op57, op54, op2, op56, op58, op1, op25]
	%op59 = mul i32 %op57, %op58  [op54, op59, op2, op56, op1, op25]
	%op60 = add i32 %op56, %op59  [op54, op2, op1, op25, op60]
	store i32 %op60, i32* %op54  [op2, op1, op25]
	%op61 = getelementptr [10 x i32], [10 x i32]* @a, i32 0, i32 5  [op2, op61, op1, op25]
	%op62 = getelementptr [10 x i32], [10 x i32]* @a, i32 0, i32 5  [op2, op61, op1, op25, op62]
	%op63 = load i32, i32* %op62  [op63, op2, op61, op1, op25]
	%op64 = load i32, i32* %op1  [op63, op2, op64, op61, op1, op25]
	%op65 = load i32, i32* %op1  [op63, op2, op64, op61, op1, op25, op65]
	%op66 = mul i32 %op64, %op65  [op63, op2, op61, op1, op25, op66]
	%op67 = add i32 %op63, %op66  [op2, op67, op61, op1, op25]
	store i32 %op67, i32* %op61  [op2, op1, op25]
	%op68 = getelementptr [10 x i32], [10 x i32]* @a, i32 0, i32 6  [op2, op1, op25, op68]
	%op69 = getelementptr [10 x i32], [10 x i32]* @a, i32 0, i32 6  [op2, op69, op1, op25, op68]
	%op70 = load i32, i32* %op69  [op2, op70, op1, op25, op68]
	%op71 = load i32, i32* %op1  [op2, op71, op70, op1, op25, op68]
	%op72 = load i32, i32* %op1  [op2, op71, op70, op72, op1, op25, op68]
	%op73 = mul i32 %op71, %op72  [op2, op70, op1, op25, op73, op68]
	%op74 = add i32 %op70, %op73  [op74, op2, op1, op25, op68]
	store i32 %op74, i32* %op68  [op2, op1, op25]
	%op75 = getelementptr [10 x i32], [10 x i32]* @a, i32 0, i32 7  [op2, op1, op25, op75]
	%op76 = getelementptr [10 x i32], [10 x i32]* @a, i32 0, i32 7  [op2, op1, op25, op76, op75]
	%op77 = load i32, i32* %op76  [op2, op1, op25, op77, op75]
	%op78 = load i32, i32* %op1  [op2, op78, op1, op25, op77, op75]
	%op79 = load i32, i32* %op1  [op2, op78, op1, op25, op79, op77, op75]
	%op80 = mul i32 %op78, %op79  [op80, op2, op1, op25, op77, op75]
	%op81 = add i32 %op77, %op80  [op2, op81, op1, op25, op75]
	store i32 %op81, i32* %op75  [op2, op1, op25]
	%op82 = getelementptr [10 x i32], [10 x i32]* @a, i32 0, i32 8  [op2, op82, op1, op25]
	%op83 = getelementptr [10 x i32], [10 x i32]* @a, i32 0, i32 8  [op2, op82, op1, op25, op83]
	%op84 = load i32, i32* %op83  [op2, op84, op82, op1, op25]
	%op85 = load i32, i32* %op1  [op2, op85, op84, op82, op1, op25]
	%op86 = load i32, i32* %op1  [op2, op85, op84, op82, op1, op25, op86]
	%op87 = mul i32 %op85, %op86  [op2, op84, op82, op87, op1, op25]
	%op88 = add i32 %op84, %op87  [op2, op82, op88, op1, op25]
	store i32 %op88, i32* %op82  [op2, op1, op25]
	%op89 = getelementptr [10 x i32], [10 x i32]* @a, i32 0, i32 9  [op89, op2, op1, op25]
	%op90 = getelementptr [10 x i32], [10 x i32]* @a, i32 0, i32 9  [op89, op2, op90, op1, op25]
	%op91 = load i32, i32* %op90  [op89, op2, op1, op91, op25]
	%op92 = load i32, i32* %op1  [op92, op89, op2, op1, op91, op25]
	%op93 = load i32, i32* %op1  [op92, op89, op2, op93, op1, op91, op25]
	%op94 = mul i32 %op92, %op93  [op94, op89, op2, op1, op91, op25]
	%op95 = add i32 %op91, %op94  [op89, op2, op1, op25, op95]
	store i32 %op95, i32* %op89  [op2, op1, op25]
	store i32 0, i32* %op1  [op2, op1, op25]
	br label %label111  [op2, op1, op25]

label96:
	%op97 = getelementptr [2 x i8], [2 x i8]* @.str1, i32 0, i32 0  [op2, op97, op1, op25]
	call void @putstr(i8* %op97)  [op2, op1, op25]
	%op98 = load i32, i32* %op1  [op98, op2, op25]
	call void @putint(i32 %op98)  [op2, op25]
	%op99 = getelementptr [3 x i8], [3 x i8]* @.str0, i32 0, i32 0  [op99, op2, op25]
	call void @putstr(i8* %op99)  [op2, op25]
	%op100 = load i32, i32* %op2  [op100, op25]
	call void @putint(i32 %op100)  [op25]
	%op101 = getelementptr [3 x i8], [3 x i8]* @.str0, i32 0, i32 0  [op101, op25]
	call void @putstr(i8* %op101)  [op25]
	%op102 = load i32, i32* %op25  [op102]
	call void @putint(i32 %op102)  []
	%op103 = getelementptr [2 x i8], [2 x i8]* @.str1, i32 0, i32 0  [op103]
	call void @putstr(i8* %op103)  []
	ret i32 0  []

label104:
	%op105 = load i32, i32* %op1  [op2, op1, op25, op105]
	%op106 = getelementptr [10 x i32], [10 x i32]* @a, i32 0, i32 %op105  [op106, op2, op1, op25]
	%op107 = load i32, i32* %op106  [op2, op1, op25, op107]
	call void @putint(i32 %op107)  [op2, op1, op25]
	%op108 = getelementptr [3 x i8], [3 x i8]* @.str0, i32 0, i32 0  [op108, op2, op1, op25]
	call void @putstr(i8* %op108)  [op2, op1, op25]
	%op109 = load i32, i32* %op1  [op2, op109, op1, op25]
	%op110 = add i32 %op109, 1  [op2, op110, op1, op25]
	store i32 %op110, i32* %op1  [op2, op1, op25]
	br label %label111  [op2, op1, op25]

label111:
	%op112 = load i32, i32* %op1  [op112, op2, op1, op25]
	%op113 = icmp slt i32 %op112, 10  [op113, op2, op1, op25]
	%op114 = zext i1 %op113 to i32  [op114, op2, op1, op25]
	%op115 = icmp ne i32 %op114, 0  [op2, op1, op25, op115]
	br i1 %op115, label %label104, label %label96  [op2, op1, op25]

