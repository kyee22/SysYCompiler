================== main liveVar ================
label0:
	@1: %op1 = alloca i32  [op1]
	@2: %op2 = alloca i32  [op1, op2]
	@3: %op3 = alloca i32  [op1, op3, op2]
	@4: %op4 = call i32 @getint()  [op4, op1, op3, op2]
	@5: store i32 %op4, i32* %op1  [op1, op3, op2]
	@6: %op5 = call i32 @getint()  [op1, op3, op5, op2]
	@7: store i32 %op5, i32* %op2  [op1, op3, op2]
	@8: store i32 0, i32* %op3  [op1, op3, op2]
	@9: br label %label11  [op1, op3, op2]

label6:
	@25: store i32 0, i32* %op3  [op1, op3, op2]
	@26: br label %label25  [op1, op3, op2]

label7:
	@16: %op8 = load i32, i32* %op3  [op1, op8, op3, op2]
	@17: %op9 = getelementptr [10005 x i32], [10005 x i32]* @a, i32 0, i32 %op8  [op9, op1, op3, op2]
	@18: %op10 = call i32 @getint()  [op9, op1, op10, op3, op2]
	@19: store i32 %op10, i32* %op9  [op1, op3, op2]
	@20: br label %label17  [op1, op3, op2]

label11:
	@10: %op12 = load i32, i32* %op3  [op1, op3, op12, op2]
	@11: %op13 = load i32, i32* %op1  [op13, op1, op3, op12, op2]
	@12: %op14 = icmp slt i32 %op12, %op13  [op1, op14, op3, op2]
	@13: %op15 = zext i1 %op14 to i32  [op15, op1, op3, op2]
	@14: %op16 = icmp ne i32 %op15, 0  [op16, op1, op3, op2]
	@15: br i1 %op16, label %label7, label %label6  [op1, op3, op2]

label17:
	@21: %op18 = load i32, i32* %op3  [op1, op18, op3, op2]
	@22: %op19 = add i32 %op18, 1  [op1, op3, op19, op2]
	@23: store i32 %op19, i32* %op3  [op1, op3, op2]
	@24: br label %label11  [op1, op3, op2]

label20:
	@42: br label %label41  [op1, op2]

label21:
	@33: %op22 = load i32, i32* %op3  [op1, op22, op3, op2]
	@34: %op23 = getelementptr [10005 x i32], [10005 x i32]* @b, i32 0, i32 %op22  [op23, op1, op3, op2]
	@35: %op24 = call i32 @getint()  [op23, op1, op3, op24, op2]
	@36: store i32 %op24, i32* %op23  [op1, op3, op2]
	@37: br label %label31  [op1, op3, op2]

label25:
	@27: %op26 = load i32, i32* %op3  [op1, op3, op26, op2]
	@28: %op27 = load i32, i32* %op1  [op1, op27, op3, op26, op2]
	@29: %op28 = icmp slt i32 %op26, %op27  [op1, op28, op3, op2]
	@30: %op29 = zext i1 %op28 to i32  [op29, op1, op3, op2]
	@31: %op30 = icmp ne i32 %op29, 0  [op30, op1, op3, op2]
	@32: br i1 %op30, label %label21, label %label20  [op1, op3, op2]

label31:
	@38: %op32 = load i32, i32* %op3  [op32, op1, op3, op2]
	@39: %op33 = add i32 %op32, 1  [op33, op1, op3, op2]
	@40: store i32 %op33, i32* %op3  [op1, op3, op2]
	@41: br label %label25  [op1, op3, op2]

label34:
	@51: %op35 = load i32, i32* @sum  [op35]
	@52: call void @putint(i32 %op35)  []
	@53: ret i32 0  []

label36:
	@55: %op37 = alloca i32  [op37, op1, op2]
	@56: %op38 = getelementptr [10005 x i32], [10005 x i32]* @a, i32 0, i32 0  [op37, op1, op38, op2]
	@57: %op39 = load i32, i32* %op1  [op37, op1, op38, op39, op2]
	@58: %op40 = call i32 @find(i32* %op38, i32 %op39)  [op37, op40, op1, op2]
	@59: store i32 %op40, i32* %op37  [op37, op1, op2]
	@60: br label %label75  [op37, op1, op2]

label41:
	@43: %op42 = load i32, i32* %op2  [op42, op1, op2]
	@44: %op43 = icmp ne i32 %op42, 0  [op1, op43, op2]
	@45: br i1 %op43, label %label36, label %label44  [op1, op2]

label44:
	@46: %op45 = getelementptr [10005 x i32], [10005 x i32]* @a, i32 0, i32 0  [op45, op1, op2]
	@47: %op46 = load i32, i32* %op1  [op45, op1, op46, op2]
	@48: %op47 = call i32 @search(i32* %op45, i32 %op46)  [op1, op47, op2]
	@49: %op48 = icmp ne i32 %op47, 0  [op48, op1, op2]
	@50: br i1 %op48, label %label36, label %label34  [op1, op2]

label49:
	@69: %op50 = load i32, i32* @sum  [op37, op50, op1, op2]
	@70: %op51 = load i32, i32* %op37  [op37, op50, op1, op51, op2]
	@71: %op52 = getelementptr [10005 x i32], [10005 x i32]* @a, i32 0, i32 %op51  [op37, op50, op1, op52, op2]
	@72: %op53 = load i32, i32* %op52  [op37, op50, op1, op53, op2]
	@73: %op54 = load i32, i32* %op37  [op54, op37, op50, op1, op53, op2]
	@74: %op55 = getelementptr [10005 x i32], [10005 x i32]* @b, i32 0, i32 %op54  [op55, op37, op50, op1, op53, op2]
	@75: %op56 = load i32, i32* %op55  [op56, op37, op50, op1, op53, op2]
	@76: %op57 = mul i32 %op53, %op56  [op57, op37, op50, op1, op2]
	@77: %op58 = add i32 %op50, %op57  [op37, op1, op58, op2]
	@78: store i32 %op58, i32* @sum  [op37, op1, op2]
	@79: %op59 = load i32, i32* %op2  [op37, op1, op59, op2]
	@80: %op60 = load i32, i32* %op37  [op37, op60, op1, op59, op2]
	@81: %op61 = getelementptr [10005 x i32], [10005 x i32]* @b, i32 0, i32 %op60  [op37, op61, op1, op59, op2]
	@82: %op62 = load i32, i32* %op61  [op62, op37, op1, op59, op2]
	@83: %op63 = sub i32 %op59, %op62  [op63, op37, op1, op2]
	@84: store i32 %op63, i32* %op2  [op37, op1, op2]
	@85: br label %label64  [op37, op1, op2]

label64:
	@86: %op65 = load i32, i32* %op37  [op1, op65, op2]
	@87: %op66 = getelementptr [10005 x i32], [10005 x i32]* @a, i32 0, i32 %op65  [op66, op1, op2]
	@88: store i32 0, i32* %op66  [op1, op2]
	@89: br label %label41  [op1, op2]

label67:
	@90: %op68 = load i32, i32* @sum  [op68, op37, op1, op2]
	@91: %op69 = load i32, i32* %op2  [op69, op68, op37, op1, op2]
	@92: %op70 = load i32, i32* %op37  [op69, op68, op37, op1, op70, op2]
	@93: %op71 = getelementptr [10005 x i32], [10005 x i32]* @a, i32 0, i32 %op70  [op69, op68, op37, op71, op1, op2]
	@94: %op72 = load i32, i32* %op71  [op69, op68, op37, op1, op72, op2]
	@95: %op73 = mul i32 %op69, %op72  [op68, op37, op1, op73, op2]
	@96: %op74 = add i32 %op68, %op73  [op37, op74, op1, op2]
	@97: store i32 %op74, i32* @sum  [op37, op1, op2]
	@98: store i32 0, i32* %op2  [op37, op1, op2]
	@99: br label %label64  [op37, op1, op2]

label75:
	@61: %op76 = load i32, i32* %op2  [op76, op37, op1, op2]
	@62: %op77 = load i32, i32* %op37  [op76, op37, op1, op77, op2]
	@63: %op78 = getelementptr [10005 x i32], [10005 x i32]* @b, i32 0, i32 %op77  [op76, op37, op1, op78, op2]
	@64: %op79 = load i32, i32* %op78  [op76, op37, op1, op79, op2]
	@65: %op80 = icmp sge i32 %op76, %op79  [op37, op80, op1, op2]
	@66: %op81 = zext i1 %op80 to i32  [op37, op1, op81, op2]
	@67: %op82 = icmp ne i32 %op81, 0  [op37, op1, op82, op2]
	@68: br i1 %op82, label %label49, label %label67  [op37, op1, op2]

