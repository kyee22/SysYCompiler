declare i32 @getint()
declare i32 @getchar()
declare void @putint(i32)
declare void @putch(i32)
declare void @putstr(i8*)

@N = constant i32 10
@a = global [10 x i32] [i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9]
@.str0 = constant [3 x i8] [i8 44, i8 32, i8 0]
@.str1 = constant [2 x i8] [i8 10, i8 0]

define i32 @fib(i32 %arg0) {
label1:
  br label %label5

label3:                                                ; preds = %label5
  ret i32 1

label4:                                                ; preds = %label5
  br label %label19

label5:                                                ; preds = %label1
  %op7 = icmp eq i32 %arg0, 1
  %op8 = zext i1 %op7 to i32
  %op9 = icmp ne i32 %op8, 0
  br i1 %op9, label %label3, label %label4

label10:                                                ; preds = %label19
  ret i32 2

label11:                                                ; preds = %label19
  %op13 = sub i32 %arg0, 1
  %op14 = call i32 @fib(i32 %op13)
  %op16 = sub i32 %arg0, 2
  %op17 = call i32 @fib(i32 %op16)
  %op18 = add i32 %op14, %op17
  ret i32 %op18

label19:                                                ; preds = %label4
  %op21 = icmp eq i32 %arg0, 2
  %op22 = zext i1 %op21 to i32
  %op23 = icmp ne i32 %op22, 0
  br i1 %op23, label %label10, label %label11

}

define i32 @main() {
label0:
  %op5 = call i32 @getint()
  %op6 = call i32 @getint()
  %op9 = mul i32 %op5, %op6
  %op10 = sub i32 0, %op9
  %op11 = call i32 @fib(i32 4)
  %op12 = mul i32 %op10, %op11
  %op13 = add i32 %op12, 0
  %op14 = getelementptr [10 x i32], [10 x i32]* @a, i32 0, i32 1
  %op15 = load i32, i32* %op14
  %op16 = mul i32 %op15, 1
  %op17 = add i32 %op13, %op16
  %op18 = sub i32 %op17, 0
  %op19 = sdiv i32 %op18, 5
  %op20 = call i32 @fib(i32 5)
  %op21 = add i32 %op20, 2
  %op22 = call i32 @fib(i32 %op21)
  %op23 = sub i32 1197, %op22
  %op24 = add i32 %op23, -10091
  %op26 = getelementptr [10 x i32], [10 x i32]* @a, i32 0, i32 0
  %op27 = getelementptr [10 x i32], [10 x i32]* @a, i32 0, i32 0
  %op28 = load i32, i32* %op27
  %op31 = mul i32 %op19, %op19
  %op32 = add i32 %op28, %op31
  store i32 %op32, i32* %op26
  %op33 = getelementptr [10 x i32], [10 x i32]* @a, i32 0, i32 1
  %op34 = getelementptr [10 x i32], [10 x i32]* @a, i32 0, i32 1
  %op35 = load i32, i32* %op34
  %op39 = add i32 %op35, %op31
  store i32 %op39, i32* %op33
  %op40 = getelementptr [10 x i32], [10 x i32]* @a, i32 0, i32 2
  %op41 = getelementptr [10 x i32], [10 x i32]* @a, i32 0, i32 2
  %op42 = load i32, i32* %op41
  %op46 = add i32 %op42, %op31
  store i32 %op46, i32* %op40
  %op47 = getelementptr [10 x i32], [10 x i32]* @a, i32 0, i32 3
  %op48 = getelementptr [10 x i32], [10 x i32]* @a, i32 0, i32 3
  %op49 = load i32, i32* %op48
  %op53 = add i32 %op49, %op31
  store i32 %op53, i32* %op47
  %op54 = getelementptr [10 x i32], [10 x i32]* @a, i32 0, i32 4
  %op55 = getelementptr [10 x i32], [10 x i32]* @a, i32 0, i32 4
  %op56 = load i32, i32* %op55
  %op60 = add i32 %op56, %op31
  store i32 %op60, i32* %op54
  %op61 = getelementptr [10 x i32], [10 x i32]* @a, i32 0, i32 5
  %op62 = getelementptr [10 x i32], [10 x i32]* @a, i32 0, i32 5
  %op63 = load i32, i32* %op62
  %op67 = add i32 %op63, %op31
  store i32 %op67, i32* %op61
  %op68 = getelementptr [10 x i32], [10 x i32]* @a, i32 0, i32 6
  %op69 = getelementptr [10 x i32], [10 x i32]* @a, i32 0, i32 6
  %op70 = load i32, i32* %op69
  %op74 = add i32 %op70, %op31
  store i32 %op74, i32* %op68
  %op75 = getelementptr [10 x i32], [10 x i32]* @a, i32 0, i32 7
  %op76 = getelementptr [10 x i32], [10 x i32]* @a, i32 0, i32 7
  %op77 = load i32, i32* %op76
  %op81 = add i32 %op77, %op31
  store i32 %op81, i32* %op75
  %op82 = getelementptr [10 x i32], [10 x i32]* @a, i32 0, i32 8
  %op83 = getelementptr [10 x i32], [10 x i32]* @a, i32 0, i32 8
  %op84 = load i32, i32* %op83
  %op88 = add i32 %op84, %op31
  store i32 %op88, i32* %op82
  %op89 = getelementptr [10 x i32], [10 x i32]* @a, i32 0, i32 9
  %op90 = getelementptr [10 x i32], [10 x i32]* @a, i32 0, i32 9
  %op91 = load i32, i32* %op90
  %op95 = add i32 %op91, %op31
  store i32 %op95, i32* %op89
  mv i32 0 to %
  br label %label111

label96:                                                ; preds = %label111
  %op97 = getelementptr [2 x i8], [2 x i8]* @.str1, i32 0, i32 0
  call void @putstr(i8* %op97)
  call void @putint(i32 %)
  %op99 = getelementptr [3 x i8], [3 x i8]* @.str0, i32 0, i32 0
  call void @putstr(i8* %op99)
  call void @putint(i32 %op24)
  %op101 = getelementptr [3 x i8], [3 x i8]* @.str0, i32 0, i32 0
  call void @putstr(i8* %op101)
  call void @putint(i32 -6)
  %op103 = getelementptr [2 x i8], [2 x i8]* @.str1, i32 0, i32 0
  call void @putstr(i8* %op103)
  ret i32 0

label104:                                                ; preds = %label111
  %op106 = getelementptr [10 x i32], [10 x i32]* @a, i32 0, i32 %
  %op107 = load i32, i32* %op106
  call void @putint(i32 %op107)
  %op108 = getelementptr [3 x i8], [3 x i8]* @.str0, i32 0, i32 0
  call void @putstr(i8* %op108)
  %op110 = add i32 %, 1
  mv i32 %op110 to %
  br label %label111

label111:                                                ; preds = %label0, %label104
  %op113 = icmp slt i32 %, 10
  %op114 = zext i1 %op113 to i32
  %op115 = icmp ne i32 %op114, 0
  br i1 %op115, label %label104, label %label96

}

