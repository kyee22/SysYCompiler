declare i32 @getint()
declare i32 @getchar()
declare void @putint(i32)
declare void @putch(i32)
declare void @putstr(i8*)

@a = constant i32 1
@b = constant i32 3
@c = constant i32 53
@d = global i32 zeroinitializer
@e = global [10 x i32] zeroinitializer
@f = constant [8 x i32] [i32 2024, i32 11, i32 1, i32 97, i32 0, i32 0, i32 0, i32 0]
@g = constant [5 x i32] [i32 1, i32 2, i32 3, i32 4, i32 5]
@h = constant i8 49
@i = constant i8 10
@j = global i8 zeroinitializer
@k = constant i8 15
@s = global [10 x i8] zeroinitializer
@m = constant [30 x i8] [i8 104, i8 101, i8 108, i8 108, i8 111, i8 32, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0]
@q = constant [5 x i8] [i8 98, i8 117, i8 97, i8 97, i8 0]

define i32 @main() {
label0:
  %op1 = alloca i32
  store i32 2, i32* %op1
  %op2 = alloca i8
  store i8 232, i8* %op2
  %op3 = alloca [5 x i8]
  %op4 = getelementptr [5 x i8], [5 x i8]* %op3, i32 0, i32 0
  store i8 0, i8* %op4
  %op5 = getelementptr [5 x i8], [5 x i8]* %op3, i32 0, i32 1
  store i8 1, i8* %op5
  %op6 = getelementptr [5 x i8], [5 x i8]* %op3, i32 0, i32 2
  store i8 183, i8* %op6
  %op7 = getelementptr [5 x i8], [5 x i8]* %op3, i32 0, i32 3
  store i8 97, i8* %op7
  %op8 = getelementptr [5 x i8], [5 x i8]* %op3, i32 0, i32 4
  store i8 0, i8* %op8
  %op9 = alloca [20 x i8]
  %op10 = getelementptr [20 x i8], [20 x i8]* %op9, i32 0, i32 0
  store i8 103, i8* %op10
  %op11 = getelementptr [20 x i8], [20 x i8]* %op9, i32 0, i32 1
  store i8 114, i8* %op11
  %op12 = getelementptr [20 x i8], [20 x i8]* %op9, i32 0, i32 2
  store i8 101, i8* %op12
  %op13 = getelementptr [20 x i8], [20 x i8]* %op9, i32 0, i32 3
  store i8 97, i8* %op13
  %op14 = getelementptr [20 x i8], [20 x i8]* %op9, i32 0, i32 4
  store i8 116, i8* %op14
  %op15 = getelementptr [20 x i8], [20 x i8]* %op9, i32 0, i32 5
  store i8 33, i8* %op15
  %op16 = getelementptr [20 x i8], [20 x i8]* %op9, i32 0, i32 6
  store i8 0, i8* %op16
  %op17 = getelementptr [20 x i8], [20 x i8]* %op9, i32 0, i32 7
  store i8 0, i8* %op17
  %op18 = getelementptr [20 x i8], [20 x i8]* %op9, i32 0, i32 8
  store i8 0, i8* %op18
  %op19 = getelementptr [20 x i8], [20 x i8]* %op9, i32 0, i32 9
  store i8 0, i8* %op19
  %op20 = getelementptr [20 x i8], [20 x i8]* %op9, i32 0, i32 10
  store i8 0, i8* %op20
  %op21 = getelementptr [20 x i8], [20 x i8]* %op9, i32 0, i32 11
  store i8 0, i8* %op21
  %op22 = getelementptr [20 x i8], [20 x i8]* %op9, i32 0, i32 12
  store i8 0, i8* %op22
  %op23 = getelementptr [20 x i8], [20 x i8]* %op9, i32 0, i32 13
  store i8 0, i8* %op23
  %op24 = getelementptr [20 x i8], [20 x i8]* %op9, i32 0, i32 14
  store i8 0, i8* %op24
  %op25 = getelementptr [20 x i8], [20 x i8]* %op9, i32 0, i32 15
  store i8 0, i8* %op25
  %op26 = getelementptr [20 x i8], [20 x i8]* %op9, i32 0, i32 16
  store i8 0, i8* %op26
  %op27 = getelementptr [20 x i8], [20 x i8]* %op9, i32 0, i32 17
  store i8 0, i8* %op27
  %op28 = getelementptr [20 x i8], [20 x i8]* %op9, i32 0, i32 18
  store i8 0, i8* %op28
  %op29 = getelementptr [20 x i8], [20 x i8]* %op9, i32 0, i32 19
  store i8 0, i8* %op29
  ret i32 48

}

