INTTK int
IDENFR i
ASSIGN =
INTCON 10
<Number>
<PrimaryExp>
<UnaryExp>
<MulExp>
MULT *
LPARENT (
INTCON 20
<Number>
<PrimaryExp>
<UnaryExp>
<MulExp>
<AddExp>
MINU -
INTCON 6
<Number>
<PrimaryExp>
<UnaryExp>
<MulExp>
<AddExp>
<Exp>
RPARENT 
<PrimaryExp>
<UnaryExp>
<MulExp>
<AddExp>
<Exp>
<InitVal>
<VarDef>
SEMICN ;
<VarDecl>
CHARTK char
IDENFR c
ASSIGN =
CHRCON 'a'
<Character>
<PrimaryExp>
<UnaryExp>
<MulExp>
<AddExp>
<Exp>
<InitVal>
<VarDef>
SEMICN ;
<VarDecl>
INTTK int
MAINTK main
LPARENT (
RPARENT )
LBRACE {
IDENFR i
<LVal>
ASSIGN =
GETINTTK getint
LPARENT (
RPARENT )
SEMICN 
<Stmt>
INTCON 10
<Number>
<PrimaryExp>
<UnaryExp>
<MulExp>
<AddExp>
PLUS +
IDENFR i
<LVal>
<PrimaryExp>
<UnaryExp>
<MulExp>
<AddExp>
<Exp>
SEMICN 
<Stmt>
IDENFR c
<LVal>
ASSIGN =
GETCHARTK getchar
LPARENT (
RPARENT )
SEMICN 
<Stmt>
IDENFR i
<LVal>
ASSIGN =
GETINTTK getint
LPARENT (
RPARENT 
SEMICN ;
<Stmt>
IDENFR c
<LVal>
ASSIGN =
GETCHARTK getchar
LPARENT (
RPARENT 
SEMICN ;
<Stmt>
FORTK for
LPARENT (
SEMICN ;
SEMICN ;
RPARENT )
LBRACE {
BREAKTK break
SEMICN 
<Stmt>
LBRACE {
FORTK for
LPARENT (
SEMICN ;
SEMICN ;
RPARENT )
CONTINUETK continue
SEMICN 
<Stmt>
<Stmt>
RBRACE }
<Block>
<Stmt>
RBRACE }
<Block>
<Stmt>
<Stmt>
RETURNTK return
INTCON 0
<Number>
<PrimaryExp>
<UnaryExp>
<MulExp>
<AddExp>
<Exp>
SEMICN ;
<Stmt>
RBRACE }
<Block>
<MainFuncDef>
<CompUnit>