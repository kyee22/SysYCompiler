# Copyright (C) 2024 Yixuan Kuang <kyee22@buaa.edu.cn>

.data
	n: .word 0
	.str0: .byte 77, 111, 99, 97, 32, 109, 111, 118, 101, 32, 111, 116, 116, 101, 114, 32, 0
	.str1: .byte 32, 102, 114, 111, 109, 32, 113, 117, 101, 117, 101, 32, 0
	.str2: .byte 32, 116, 111, 32, 113, 117, 101, 117, 101, 32, 0
	.str3: .byte 10, 0

.text

prologue_main:
	addiu   $sp, $sp, -844
	sw      $ra, 36($sp)
	sw      $t7, 32($sp)
	sw      $t6, 28($sp)
	sw      $t5, 24($sp)
	sw      $t4, 20($sp)

label0_at_main:
	# %op1 = call i32 @getint()
	li      $v0, 5
	syscall
	move    $t4, $v0

	# store i32 %op1, i32* @n
	la      $t0, n
	sw      $t4, 0($t0)

	# %op2 = alloca [200 x i32]
	addiu   $t4, $sp, 44

	# mv i32 0 to %op10
	move    $t5, $zero

	# br label %label9
	j       label9_at_main


label3_at_main:
	# %op4 = getelementptr [200 x i32], [200 x i32]* %op2, i32 0, i32 0
	move    $t6, $t4

	# %op5 = load i32, i32* @n
	la      $t0, n
	lw      $t7, 0($t0)

	# call void @move(i32* %op4, i32 %op5, i8 65, i8 66, i8 67)
	sw      $t6, 0($sp)
	sw      $t7, 4($sp)
	ori     $t0, $zero, 65
	sb      $t0, 8($sp)
	ori     $t0, $zero, 66
	sb      $t0, 12($sp)
	ori     $t0, $zero, 67
	sb      $t0, 16($sp)
	jal     prologue_move

	# ret i32 0
	li      $v0, 10
	syscall


label6_at_main:
	# %op7 = getelementptr [200 x i32], [200 x i32]* %op2, i32 0, i32 %op10
	sll     $t0, $t5, 2
	addu    $t7, $t4, $t0

	# %op8 = add i32 %op10, 1
	ori     $t0, $zero, 1
	addu    $t6, $t5, $t0

	# store i32 %op8, i32* %op7
	sw      $t6, 0($t7)

	# br label %label15
	j       label15_at_main


label9_at_main:
	# %op11 = load i32, i32* @n
	la      $t0, n
	lw      $t6, 0($t0)

	# %op12 = icmp slt i32 %op10, %op11
	slt     $t6, $t5, $t6

	# %op13 = zext i1 %op12 to i32
	move    $t6, $t6

	# %op14 = icmp ne i32 %op13, 0
	sne     $t6, $t6, $zero

	# br i1 %op14, label %label6, label %label3
	bne     $zero, $t6, label6_at_main
	j       label3_at_main


label15_at_main:
	# %op16 = add i32 %op10, 1
	ori     $t0, $zero, 1
	addu    $t6, $t5, $t0

	# mv i32 %op16 to %op10
	move    $t5, $t6

	# br label %label9
	j       label9_at_main


epilogue_main:
	lw      $t4, 20($sp)
	lw      $t5, 24($sp)
	lw      $t6, 28($sp)
	lw      $t7, 32($sp)
	lw      $ra, 36($sp)
	addiu   $sp, $sp, 844
	li      $v0, 10
	syscall

prologue_print_move:
	addiu   $sp, $sp, -16
	sw      $ra, 8($sp)
	sw      $t4, 4($sp)

label3_at_print_move:
	# %op4 = getelementptr [17 x i8], [17 x i8]* @.str0, i32 0, i32 0
	la      $t0, .str0
	move    $t4, $t0

	# call void @putstr(i8* %op4)
	sw      $t4, 0($sp)
	li      $v0, 4
	syscall

	# call void @putint(i32 %arg0)
	lw      $t0, 16($sp)
	sw      $t0, 0($sp)
	li      $v0, 1
	syscall

	# %op5 = getelementptr [13 x i8], [13 x i8]* @.str1, i32 0, i32 0
	la      $t0, .str1
	move    $t4, $t0

	# call void @putstr(i8* %op5)
	sw      $t4, 0($sp)
	li      $v0, 4
	syscall

	# %op6 = zext i8 %arg1 to i32
	lb      $t0, 20($sp)
	move    $t4, $t0

	# call void @putch(i32 %op6)
	sw      $t4, 0($sp)
	li      $v0, 11
	syscall

	# %op7 = getelementptr [11 x i8], [11 x i8]* @.str2, i32 0, i32 0
	la      $t0, .str2
	move    $t4, $t0

	# call void @putstr(i8* %op7)
	sw      $t4, 0($sp)
	li      $v0, 4
	syscall

	# %op8 = zext i8 %arg2 to i32
	lb      $t0, 24($sp)
	move    $t4, $t0

	# call void @putch(i32 %op8)
	sw      $t4, 0($sp)
	li      $v0, 11
	syscall

	# %op9 = getelementptr [2 x i8], [2 x i8]* @.str3, i32 0, i32 0
	la      $t0, .str3
	move    $t4, $t0

	# call void @putstr(i8* %op9)
	sw      $t4, 0($sp)
	li      $v0, 4
	syscall

	# ret void
	j       epilogue_print_move


epilogue_print_move:
	lw      $t4, 4($sp)
	lw      $ra, 8($sp)
	addiu   $sp, $sp, 16
	jr      $ra

prologue_move:
	addiu   $sp, $sp, -32
	sw      $ra, 24($sp)
	sw      $t4, 20($sp)

label5_at_move:
	# br label %label15
	j       label15_at_move


label6_at_move:
	# %op7 = getelementptr i32, i32* %arg0, i32 0
	lw      $t0, 32($sp)
	move    $t4, $t0

	# %op8 = load i32, i32* %op7
	lw      $t4, 0($t4)

	# call void @print_move(i32 %op8, i8 %arg2, i8 %arg4)
	sw      $t4, 0($sp)
	lb      $t0, 40($sp)
	sb      $t0, 4($sp)
	lb      $t0, 48($sp)
	sb      $t0, 8($sp)
	jal     prologue_print_move

	# ret void
	j       epilogue_move


label9_at_move:
	# %op10 = sub i32 %arg1, 1
	lw      $t0, 36($sp)
	ori     $t1, $zero, 1
	subu    $t4, $t0, $t1

	# call void @move(i32* %arg0, i32 %op10, i8 %arg2, i8 %arg4, i8 %arg3)
	lw      $t0, 32($sp)
	sw      $t0, 0($sp)
	sw      $t4, 4($sp)
	lb      $t0, 40($sp)
	sb      $t0, 8($sp)
	lb      $t0, 48($sp)
	sb      $t0, 12($sp)
	lb      $t0, 44($sp)
	sb      $t0, 16($sp)
	jal     prologue_move

	# %op11 = sub i32 %arg1, 1
	lw      $t0, 36($sp)
	ori     $t1, $zero, 1
	subu    $t4, $t0, $t1

	# %op12 = getelementptr i32, i32* %arg0, i32 %op11
	lw      $t0, 32($sp)
	sll     $t1, $t4, 2
	addu    $t4, $t0, $t1

	# %op13 = load i32, i32* %op12
	lw      $t4, 0($t4)

	# call void @print_move(i32 %op13, i8 %arg2, i8 %arg4)
	sw      $t4, 0($sp)
	lb      $t0, 40($sp)
	sb      $t0, 4($sp)
	lb      $t0, 48($sp)
	sb      $t0, 8($sp)
	jal     prologue_print_move

	# %op14 = sub i32 %arg1, 1
	lw      $t0, 36($sp)
	ori     $t1, $zero, 1
	subu    $t4, $t0, $t1

	# call void @move(i32* %arg0, i32 %op14, i8 %arg3, i8 %arg2, i8 %arg4)
	lw      $t0, 32($sp)
	sw      $t0, 0($sp)
	sw      $t4, 4($sp)
	lb      $t0, 44($sp)
	sb      $t0, 8($sp)
	lb      $t0, 40($sp)
	sb      $t0, 12($sp)
	lb      $t0, 48($sp)
	sb      $t0, 16($sp)
	jal     prologue_move

	# ret void
	j       epilogue_move


label15_at_move:
	# %op16 = icmp eq i32 %arg1, 1
	lw      $t0, 36($sp)
	ori     $t1, $zero, 1
	seq     $t4, $t0, $t1

	# %op17 = zext i1 %op16 to i32
	move    $t4, $t4

	# %op18 = icmp ne i32 %op17, 0
	sne     $t4, $t4, $zero

	# br i1 %op18, label %label6, label %label9
	bne     $zero, $t4, label6_at_move
	j       label9_at_move


epilogue_move:
	lw      $t4, 20($sp)
	lw      $ra, 24($sp)
	addiu   $sp, $sp, 32
	jr      $ra
