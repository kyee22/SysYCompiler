# Copyright (C) 2024 Yixuan Kuang <kyee22@buaa.edu.cn>

.data
	a1: .word 1
	a2: .word 0
	a3: .word 0
	a4: .word 11, 12, 13, 14, 15
	c1: .word 127
	c2: .word 96
	c3: .word 24, 40, 1
	ch1: .byte 1
	ch2: .byte 51
	ch3: .byte 97
	cch1: .byte 97
	cch2: .byte 0xc4
	cch3: .byte 99, 99, 103, 34, 1, 1, 1, 65, 122, 119
	.str0: .byte 50, 50, 51, 55, 49, 48, 57, 50, 10, 0
	.str1: .byte 32, 0
	.str2: .byte 10, 0

.text

prologue_main:
	li $v0, 5
	syscall
	subiu $sp, $sp, 348
	sw $ra, 36($sp)
	sw $s7, 32($sp)
	sw $s6, 28($sp)
	sw $s5, 24($sp)
	sw $s4, 20($sp)
	sw $s3, 16($sp)
	sw $s2, 12($sp)
	sw $s1, 8($sp)
	sw $s0, 4($sp)

label0_at_main:
	# %op1 = getelementptr [10 x i8], [10 x i8]* @.str0, i32 0, i32 0

	# call void @putstr(i8* %op1)
	la $t0, .str0
	move $a0, $t0
	li $v0, 4
	syscall

	# %op2 = alloca i32
	addiu $t0, $sp, 340
	sw $t0, 344($sp)

	# store i32 644, i32* %op2
	ori $t0, $zero, 644
	lw $t1, 344($sp)
	sw $t0, 0($t1)

	# %op3 = load i32, i32* @a2
	la $t1, a2
	lw $t0, 0($t1)
	sw $t0, 336($sp)

	# %op4 = load i32, i32* @a1
	la $t1, a1
	lw $t0, 0($t1)
	sw $t0, 332($sp)

	# %op5 = add i32 %op3, %op4
	lw $t1, 336($sp)
	lw $t2, 332($sp)
	addu $t0, $t1, $t2
	sw $t0, 328($sp)

	# %op6 = load i32, i32* @a3
	la $t1, a3
	lw $t0, 0($t1)
	sw $t0, 324($sp)

	# %op7 = add i32 %op5, %op6
	lw $t1, 328($sp)
	lw $t2, 324($sp)
	addu $t0, $t1, $t2
	sw $t0, 320($sp)

	# %op8 = getelementptr [5 x i32], [5 x i32]* @a4, i32 0, i32 0

	# %op9 = load i32, i32* %op8
	la $t1, a4
	lw $t0, 0($t1)
	sw $t0, 316($sp)

	# %op10 = add i32 %op7, %op9
	lw $t1, 320($sp)
	lw $t2, 316($sp)
	addu $t0, $t1, $t2
	sw $t0, 312($sp)

	# call void @putint(i32 %op10)
	lw $t0, 312($sp)
	move $a0, $t0
	li $v0, 1
	syscall

	# %op11 = getelementptr [2 x i8], [2 x i8]* @.str1, i32 0, i32 0

	# call void @putstr(i8* %op11)
	la $t0, .str1
	move $a0, $t0
	li $v0, 4
	syscall

	# call void @putint(i32 127)
	ori $t0, $zero, 127
	move $a0, $t0
	li $v0, 1
	syscall

	# %op12 = getelementptr [2 x i8], [2 x i8]* @.str1, i32 0, i32 0

	# call void @putstr(i8* %op12)
	la $t0, .str1
	move $a0, $t0
	li $v0, 4
	syscall

	# call void @putint(i32 56)
	ori $t0, $zero, 56
	move $a0, $t0
	li $v0, 1
	syscall

	# %op13 = getelementptr [2 x i8], [2 x i8]* @.str1, i32 0, i32 0

	# call void @putstr(i8* %op13)
	la $t0, .str1
	move $a0, $t0
	li $v0, 4
	syscall

	# %op14 = load i8, i8* @ch1
	la $t1, ch1
	lb $t0, 0($t1)
	sb $t0, 308($sp)

	# %op15 = load i8, i8* @ch2
	la $t1, ch2
	lb $t0, 0($t1)
	sb $t0, 304($sp)

	# %op16 = zext i8 %op14 to i32
	lb $t0, 308($sp)
	move $t1, $t0
	sw $t1, 300($sp)

	# %op17 = zext i8 %op15 to i32
	lb $t0, 304($sp)
	move $t1, $t0
	sw $t1, 296($sp)

	# %op18 = add i32 %op16, %op17
	lw $t1, 300($sp)
	lw $t2, 296($sp)
	addu $t0, $t1, $t2
	sw $t0, 292($sp)

	# call void @putint(i32 %op18)
	lw $t0, 292($sp)
	move $a0, $t0
	li $v0, 1
	syscall

	# %op19 = getelementptr [2 x i8], [2 x i8]* @.str1, i32 0, i32 0

	# call void @putstr(i8* %op19)
	la $t0, .str1
	move $a0, $t0
	li $v0, 4
	syscall

	# %op20 = getelementptr [1 x i8], [1 x i8]* @ch3, i32 0, i32 0

	# %op21 = load i8, i8* %op20
	la $t1, ch3
	lb $t0, 0($t1)
	sb $t0, 288($sp)

	# %op22 = zext i8 %op21 to i32
	lb $t0, 288($sp)
	move $t1, $t0
	sw $t1, 284($sp)

	# call void @putch(i32 %op22)
	lw $t0, 284($sp)
	move $a0, $t0
	li $v0, 11
	syscall

	# %op23 = getelementptr [2 x i8], [2 x i8]* @.str1, i32 0, i32 0

	# call void @putstr(i8* %op23)
	la $t0, .str1
	move $a0, $t0
	li $v0, 4
	syscall

	# %op24 = load i32, i32* %op2
	lw $t1, 344($sp)
	lw $t0, 0($t1)
	sw $t0, 280($sp)

	# call void @putint(i32 %op24)
	lw $t0, 280($sp)
	move $a0, $t0
	li $v0, 1
	syscall

	# %op25 = getelementptr [2 x i8], [2 x i8]* @.str2, i32 0, i32 0

	# call void @putstr(i8* %op25)
	la $t0, .str2
	move $a0, $t0
	li $v0, 4
	syscall

	# %op26 = alloca i8
	addiu $t0, $sp, 272
	sw $t0, 276($sp)

	# br label %label41
	j label41_at_main


label27_at_main:
	# %op28 = getelementptr [10 x i8], [10 x i8]* @.str0, i32 0, i32 0

	# call void @putstr(i8* %op28)
	la $t0, .str0
	move $a0, $t0
	li $v0, 4
	syscall

	# %op29 = getelementptr [10 x i8], [10 x i8]* @.str0, i32 0, i32 0

	# call void @putstr(i8* %op29)
	la $t0, .str0
	move $a0, $t0
	li $v0, 4
	syscall

	# %op30 = getelementptr [10 x i8], [10 x i8]* @.str0, i32 0, i32 0

	# call void @putstr(i8* %op30)
	la $t0, .str0
	move $a0, $t0
	li $v0, 4
	syscall

	# %op31 = getelementptr [10 x i8], [10 x i8]* @.str0, i32 0, i32 0

	# call void @putstr(i8* %op31)
	la $t0, .str0
	move $a0, $t0
	li $v0, 4
	syscall

	# %op32 = getelementptr [10 x i8], [10 x i8]* @.str0, i32 0, i32 0

	# call void @putstr(i8* %op32)
	la $t0, .str0
	move $a0, $t0
	li $v0, 4
	syscall

	# %op33 = getelementptr [10 x i8], [10 x i8]* @.str0, i32 0, i32 0

	# call void @putstr(i8* %op33)
	la $t0, .str0
	move $a0, $t0
	li $v0, 4
	syscall

	# %op34 = getelementptr [10 x i8], [10 x i8]* @.str0, i32 0, i32 0

	# call void @putstr(i8* %op34)
	la $t0, .str0
	move $a0, $t0
	li $v0, 4
	syscall

	# %op35 = getelementptr [10 x i8], [10 x i8]* @.str0, i32 0, i32 0

	# call void @putstr(i8* %op35)
	la $t0, .str0
	move $a0, $t0
	li $v0, 4
	syscall

	# ret i32 0
	ori $t0, $zero, 0
	move $v0, $t0
	j epilogue_main


label36_at_main:
	# %op37 = call i32 @getchar()
	li $v0, 12
	syscall
	move $t0, $v0
	sw $t0, 268($sp)

	# %op38 = trunc i32 %op37 to i8
	lw $t0, 268($sp)
	andi $t1, $t0, 255
	sb $t1, 264($sp)

	# store i8 %op38, i8* %op26
	lb $t0, 264($sp)
	lw $t1, 276($sp)
	sb $t0, 0($t1)

	# %op39 = load i8, i8* %op26
	lw $t1, 276($sp)
	lb $t0, 0($t1)
	sb $t0, 260($sp)

	# %op40 = zext i8 %op39 to i32
	lb $t0, 260($sp)
	move $t1, $t0
	sw $t1, 256($sp)

	# call void @putch(i32 %op40)
	lw $t0, 256($sp)
	move $a0, $t0
	li $v0, 11
	syscall

	# br label %label44
	j label44_at_main


label41_at_main:
	# br label %label36
	j label36_at_main


label42_at_main:
	# br label %label27
	j label27_at_main


label43_at_main:
	# br label %label41
	j label41_at_main


label44_at_main:
	# %op45 = load i8, i8* %op26
	lw $t1, 276($sp)
	lb $t0, 0($t1)
	sb $t0, 252($sp)

	# %op46 = zext i8 %op45 to i32
	lb $t0, 252($sp)
	move $t1, $t0
	sw $t1, 248($sp)

	# %op47 = icmp eq i32 %op46, 10
	lw $t1, 248($sp)
	ori $t2, $zero, 10
	seq $t0, $t1, $t2
	sb $t0, 244($sp)

	# %op48 = zext i1 %op47 to i32
	lb $t0, 244($sp)
	move $t1, $t0
	sw $t1, 240($sp)

	# %op49 = icmp ne i32 %op48, 0
	lw $t1, 240($sp)
	ori $t2, $zero, 0
	sne $t0, $t1, $t2
	sb $t0, 236($sp)

	# br i1 %op49, label %label42, label %label43
	lb $t0, 236($sp)
	bne $zero, $t0, label42_at_main
	j label43_at_main


epilogue_main:
	lw $s0, 4($sp)
	lw $s1, 8($sp)
	lw $s2, 12($sp)
	lw $s3, 16($sp)
	lw $s4, 20($sp)
	lw $s5, 24($sp)
	lw $s6, 28($sp)
	lw $s7, 32($sp)
	lw $ra, 36($sp)
	addiu $sp, $sp, 348
	li $v0, 10
	syscall
