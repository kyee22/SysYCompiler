
void three_digit(int n) {

    int hundreds = n / 100;
    int tens = (n % 100) / 10;
    int ones = n % 10;

    // Hundreds place
    if (hundreds == 1) printf("one hundred");
    else if (hundreds == 2) printf("two hundred");
    else if (hundreds == 3) printf("three hundred");
    else if (hundreds == 4) printf("four hundred");
    else if (hundreds == 5) printf("five hundred");
    else if (hundreds == 6) printf("six hundred");
    else if (hundreds == 7) printf("seven hundred");
    else if (hundreds == 8) printf("eight hundred");
    else if (hundreds == 9) printf("nine hundred");

    if (hundreds > 0 && tens > 0 || hundreds > 0 && ones > 0) {
        printf(" and ");
    }

    // Tens place
    if (tens == 2) printf("twenty");
    else if (tens == 3) printf("thirty");
    else if (tens == 4) printf("forty");
    else if (tens == 5) printf("fifty");
    else if (tens == 6) printf("sixty");
    else if (tens == 7) printf("seventy");
    else if (tens == 8) printf("eighty");
    else if (tens == 9) printf("ninety");
    else if (tens == 1) { // Special case for teens
        if (ones == 0) printf("ten");
        else if (ones == 1) printf("eleven");
        else if (ones == 2) printf("twelve");
        else if (ones == 3) printf("thirteen");
        else if (ones == 4) printf("fourteen");
        else if (ones == 5) printf("fifteen");
        else if (ones == 6) printf("sixteen");
        else if (ones == 7) printf("seventeen");
        else if (ones == 8) printf("eighteen");
        else if (ones == 9) printf("nineteen");
    }

    if (tens > 1 && ones > 0) {
        printf("-");
    }

    // Ones place
    if (tens != 1) { // Avoid printing the ones for the teens
        if (ones == 1) printf("one");
        else if (ones == 2) printf("two");
        else if (ones == 3) printf("three");
        else if (ones == 4) printf("four");
        else if (ones == 5) printf("five");
        else if (ones == 6) printf("six");
        else if (ones == 7) printf("seven");
        else if (ones == 8) printf("eight");
        else if (ones == 9) printf("nine");
    }
}

int read(int n) {
    if (n == 0) {
        printf("zero");
        return 0;
    } else if (n < 0) {
        n = -n;
        printf("minus ");
    }

    if (n / 1000000000 == 1) printf("one billion ");
    else if (n / 1000000000 == 2) printf("two billion ");
    n = n % 1000000000;

    three_digit(n / 1000000);
    if (n / 1000000 > 0) printf(" million ");
    n = n % 1000000;

    three_digit(n / 1000);
    if (n / 1000 > 0) printf(" thousand ");
    n = n % 1000;

    three_digit(n);

    return 0;
}


int main() {
    int n;
    n = getint();
    int i;
    for ( i = 0; i < n; i = i + 1) {
        int a;
        a = getint();
        read(a);
        // 多打印 '|' 还是为了避免吞掉空白符
        printf("|\n");
    }

    return 0;
}