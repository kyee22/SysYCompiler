int n;
int cnt[1000];
int mark[200];
char s[1010];
int max_height = -1;

int max(int a, int b) {
    if (a < b) {
        return b;
    }
    return a;
}

int is_lower(char ch) {
    if (ch < 'a') {
        return 0;
    }
    if (ch > 'z') {
        return 0;
    }
    return 1;
}


char char_to_upper(char ch) {
    if (is_lower(ch)) {
        return ch - 'a' + 'A';
    }
    return ch;
}

int main() {
    n = getint();

    int i = 0;
    for (i = 0; i < n; i = i + 1) {
        s[i] = getchar();
        cnt[s[i]] = cnt[s[i]] + 1;
        max_height = max(max_height, cnt[s[i]]);
    }

    int started = 0;
    int width = 0;// mark = 0
    char ch;
    for (ch = 'a'; ch <= 'z'; ch = ch + 1) {
        if (started && cnt[ch] ||  started && cnt[char_to_upper(ch)]) {
            width = width + 1;
        }
        if (cnt[ch]) {
            mark[width] = ch;
            width = width + 1;
            started = 1;
            if (cnt[char_to_upper(ch)]) {
                mark[width] = char_to_upper(ch);
                width = width + 1;
            }
        } else if (cnt[char_to_upper(ch)]) {
            mark[width] = char_to_upper(ch);
            width = width + 1;
            started = 1;
        }

    }

    int j;
    // 每行末尾多打印一个 '|' 是为了避免JetBrains这一套吞掉行尾的空白符方便比较
    for (i = max_height; i >= 1; i = i - 1) {
        for ( j = 0; j < width; j = j + 1) {
            if (!mark[j]) {
                printf(" ");
            } else if (cnt[mark[j]] >= i) {
                printf("=");
            } else {
                printf(" ");
            }
        }
        printf("|\n");
    }
    for (i = 0; i < width; i = i + 1) {
        printf("-");
    }
    printf("|\n");
    for (i = 0; i < width; i = i + 1) {
        if (mark[i]) {
            printf("%c", mark[i]);
        } else {
            printf("%c", ' ');
        }
    }
    printf("\n");
    return 0;
}