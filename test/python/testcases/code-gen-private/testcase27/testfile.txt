//
// Created by Arren on 2024/11/14.
//




int t;
int a, b, c;
char mp[100 * 100];


int main() {
    t = getint();

    for (;t; t = t - 1) {
        a = getint();
        b = getint();
        c = getint();

        int i, j, start;
        for ( i = 0; i < 100; i = i + 1)
            for (j = 0; j < 100; j = j + 1)
                mp[i * 100 + j] = 0;

        for ( i = 1; i <= 2 * c + 1; i = i + 2) {
            for (j = 1; j <= 2 * a + 1; j = j + 2) {
                mp[i * 100 + j] = '+';
            }
            for (j = 2; j <= 2 * a; j = j + 2) {
                mp[i * 100 + j] = '-';
            }
        }
        for ( i = 2; i <= 2 * c; i = i + 2) {
            for (j = 1; j <= 2 * a + 1; j = j + 2) {
                mp[i * 100 + j] = '|';
            }
            for (j = 2; j <= 2 * a; j = j + 2) {
                mp[i * 100 + j] = ' ';
            }
        }
        for (i = 2 * c + 2; i <= 2 * c + 1 + 2 * b; i = i + 2) {
            start = i - (2 * c + 1 ) + 1;
            for (j = 1; j < start; j = j + 1) {
                mp[i * 100 + j] = ' ';
            }
            for (j = start; j <= start + 2 * a; j = 2 + j) {
                mp[i * 100 + j] = '/';
            }
            for (j = start + 1; j <= start + 2 * a - 1; j = j + 2) {
                mp[i * 100 + j] = ' ';
            }
        }
        for (i = 2 * c + 3; i <= 2 * c + 1 + 2 * b; i = i + 2) {
            start = i - (2 * c + 1 ) + 1;
            for (j = 1; j < start; j = j + 1) {
                mp[i * 100 + j] = ' ';
            }
            for (j = start; j <= start + 2 * a; j = 2 + j) {
                mp[i * 100 + j] = '+';
            }
            for (j = start + 1; j <= start + 2 * a - 1; j = j + 2) {
                mp[i * 100 + j] = '-';
            }
        }

        for (i = 2; i <= 1 + 2 * b; i = i + 2) {
            start = 2 * a + i;
            for (j = 0; j < c; j = j + 1){
                mp[(i + j * 2) * 100 + start] = '/';
                mp[(i + j * 2 + 1) * 100 + start] = ' ';
            }
        }

        for (i = 3; i <= 1 + 2 * b; i = i + 2) {
            start = 2 * a + i;
            for (j = 0; j < c; j = j + 1){
                mp[(i + j * 2) * 100 + start] = '+';
                mp[(i + j * 2 + 1) * 100 + start] = '|';
            }
        }


        for (i = 2 * c + 1 + 2 * b; i >= 1; i = i - 1)
            for (j = 1; ; j = j + 1) {
                if (!mp[i * 100 + j]) {
                    printf("\n");
                    break;
                }
                printf("%c", mp[i * 100 + j]);
            }
    }
    return 0;
}