//
// Created by Arren on 2024/11/5.
//


int tick;

int is_prime(int x) { // 要判定是否是素数的数
    tick = tick + 1;
    if (x <= 1) {
        return 0;
    }
    int flag = 1; // 1 表示该数是素数
    int i;
    for (i = 2; i * i <= x; i =i +1) {
        if (x % i == 0) {
            flag = 0;
        }
    }
    return flag;
}

int rev(int x) {
    int digit[20];
    int len = 0, res = 0;

    digit[len] = x % 10;
    len = len + 1;
    x = x / 10;
    for (;x;) {
        digit[len] = x % 10;
        len = len + 1;
        x = x / 10;
    }
    int i = len - 1, base = 1;
    for (; i >= 0; i = i - 1) {
        res = res + digit[i] * base;
        base = base * 10;
    }
    return res;
}

int main() {
    int n;
    n = getint();

    int cnt = 0, i;
    for (i = 1; i <= n; i = i  + 1) {
        if (is_prime(i) && is_prime(rev(i))) {
            cnt = cnt + 1;
            printf("%d is absolute prime.", i);
        } else if (is_prime(i)) {
            printf("%d is prime.", i);
        } else if (is_prime(rev(i))) {
            printf("rev(%d) is prime.", i);
        } else {
            printf("%d and rev(%d) are not prime.", i, i);
        }
        printf(" (isprime called %d times so far)\n", tick);
    }
    printf("===========================\n");
    printf("# of absolute prime: ");
    printf("%d\n", cnt);

    return 0;
}